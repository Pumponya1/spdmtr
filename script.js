const btn = document.getElementById('measureBtn');
const needle = document.getElementById('needle');
const result = document.getElementById('result');
const music = document.getElementById('bg-music');
const photo = document.querySelector('.photo');

const segs = [
  document.querySelector('.s1'),
  document.querySelector('.s2'),
  document.querySelector('.s3'),
  document.querySelector('.s4'),
  document.querySelector('.s5'),
];

const phrases = [
  '–õ—é–±–æ–≤—å –∑–∞—à–∫–∞–ª–∏–≤–∞–µ—Ç ‚ù§Ô∏è',
  '–û–ø–∞—Å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —á—É–≤—Å—Ç–≤ üî•',
  '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∑–æ–Ω–µ –ø–µ—Ä–µ–≥—Ä–µ–≤–∞ üíã',
  '–ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã: –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å üòç',
  '–ú–∞–∫—Å–∏–º—É–º! –ë–æ–ª—å—à–µ –∏–∑–º–µ—Ä–∏—Ç—å –Ω–µ–ª—å–∑—è üöÄ',
  '–í–∞—à–∏ —Å–µ—Ä–¥—Ü–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 100% üíñ',
  'üî• –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞ –≤–∞—à–µ–π –ª—é–±–æ–≤—å—é',
];

let clicks = 0;
let resetTimer = null;
let animInstance = null;

/** –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–µ–≥–º–µ–Ω—Ç–∞ –ø–æ —Ç–µ–∫—É—â–µ–º—É —É–≥–ª—É */
function highlightByAngle(angleDeg) {
  // -90..-54..-18..18..54..90 (5 —Å–µ–≥–º–µ–Ω—Ç–æ–≤)
  const idx =
    angleDeg < -54 ? 0 :
    angleDeg < -18 ? 1 :
    angleDeg <  18 ? 2 :
    angleDeg <  54 ? 3 : 4;

  segs.forEach((s, i) => s.classList.toggle('active', i === idx));
}

/** –ö–æ—Ä–æ—Ç–∫–∞—è –≤—Å–ø—ã—à–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–∏ –≥—Ä–∞–Ω–∏—Ü—ã —Å–µ–≥–º–µ–Ω—Ç–∞ */
let lastIdx = -1;
function flashOnChange(angleDeg) {
  const idx =
    angleDeg < -54 ? 0 :
    angleDeg < -18 ? 1 :
    angleDeg <  18 ? 2 :
    angleDeg <  54 ? 3 : 4;

  if (idx !== lastIdx) {
    segs[idx].classList.add('flash');
    setTimeout(() => segs[idx].classList.remove('flash'), 450);
    lastIdx = idx;
  }
}

/** –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è */
function measure() {
  clicks += 1;
  btn.disabled = true;
  result.textContent = '–ò–∑–º–µ—Ä—è—é‚Ä¶';

  // —Å—Ç–∞—Ä—Ç—É–µ–º –º—É–∑—ã–∫—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  music?.play().catch(() => {});

  // —É–±–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â—É—é –∞–Ω–∏–º–∞—Ü–∏—é/—Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –±—ã–ª–∏
  animInstance?.pause();
  if (resetTimer) { clearTimeout(resetTimer); resetTimer = null; }

  // –°–±—Ä–æ—Å –≤–∏–∑—É–∞–ª–æ–≤
  segs.forEach(s => s.classList.remove('active', 'flash'));
  lastIdx = -1;

  // –ö–æ–º–ø–æ–∑–∏—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è ¬´—Ä–∞–∑–≥–æ–Ω + —Ä—ã–≤–æ–∫¬ª
  animInstance = anime({
    targets: needle,
    rotate: [
      { value: -60, duration: 260, easing: 'easeOutQuad' },
      { value: 50,  duration: 360, easing: 'easeInOutQuad' },
      { value: -20, duration: 360, easing: 'easeInOutQuad' },
      { value: 90,  duration: 1400, easing: 'easeOutElastic(1, .6)' }
    ],
    update: () => {
      const t = needle.style.transform; // "rotate(XXdeg)"
      const m = /rotate\(([-\d.]+)deg\)/.exec(t);
      if (!m) return;
      const angle = parseFloat(m[1]);
      highlightByAngle(angle);
      flashOnChange(angle);
    },
    complete: () => {
      // –°–æ–æ–±—â–µ–Ω–∏–µ
      if (clicks >= 4) {
        result.textContent = '–≠–π, —Ö–≤–∞—Ç–∏—Ç, —É–∂–µ –∏ —Ç–∞–∫ –≤—Å—ë —è—Å–Ω–æ üòè';
      } else {
        const p = phrases[Math.floor(Math.random() * phrases.length)];
        result.textContent = p;
      }
      btn.disabled = false;
      btn.textContent = '–ï—â—ë —Ä–∞–∑ üíû';

      // –ù–µ–º–Ω–æ–≥–æ —Å–µ—Ä–¥–µ—á–µ–∫ –ø–æ –∫–ª–∏–∫—É ¬´–ò–∑–º–µ—Ä–∏—Ç—å¬ª
      spawnHearts(10);

      // –í–æ–∑–≤—Ä–∞—Ç —á–µ—Ä–µ–∑ 20 —Å–µ–∫
      resetTimer = setTimeout(resetGauge, 20000);
    }
  });
}

/** –í–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–µ–ª–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∞ –ø–æ–¥—Å–≤–µ—Ç–æ–∫ */
function resetGauge() {
  anime({
    targets: needle,
    rotate: -90,
    duration: 900,
    easing: 'easeInOutQuad',
    update: () => highlightByAngle(-90),
    complete: () => {
      segs.forEach(s => s.classList.remove('active', 'flash'));
      result.textContent = '';
      btn.textContent = '–ò–∑–º–µ—Ä–∏—Ç—å –ª—é–±–æ–≤—å üíò';
    }
  });
}

/** –°–µ—Ä–¥–µ—á–∫–∏ (–¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏ –¥–ª—è –ø–∞—Å—Ö–∞–ª–∫–∏) */
function spawnHearts(count = 18) {
  for (let i = 0; i < count; i++) {
    const heart = document.createElement('div');
    heart.textContent = '‚ù§Ô∏è';
    heart.className = 'flying-heart';
    const startX = Math.random() * window.innerWidth;
    heart.style.left = `${startX}px`;
    heart.style.top = `${window.innerHeight + 20}px`;
    document.body.appendChild(heart);

    anime({
      targets: heart,
      translateY: -window.innerHeight - 120,
      translateX: (Math.random() - 0.5) * 160,
      opacity: [{ value: 1, duration: 100 }, { value: 0, duration: 600, delay: 2600 }],
      duration: 3200 + Math.random() * 1200,
      easing: 'easeOutCubic',
      complete: () => heart.remove()
    });
  }
}

/** –ü–∞—Å—Ö–∞–ª–∫–∞: 3 –∫–ª–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ */
let secretClicks = 0;
let secretTimer = null;
photo.addEventListener('click', () => {
  secretClicks++;
  clearTimeout(secretTimer);
  secretTimer = setTimeout(() => secretClicks = 0, 800);
  if (secretClicks >= 3) {
    spawnHearts(30);
    secretClicks = 0;
  }
});

/** –ö–Ω–æ–ø–∫–∞ */
btn.addEventListener('click', measure);
